#/usr/bin/perl

use strict;
use warnings;

$/ = ';';
while (<DATA>) {
    s/\s+/ /gi;
    s/^ //; s/ $//;
    s/ (?=\W)//g;
    s/ ?([()]) ?/$1/g;
    s/ ?, ?/, /g;
    print;
}

__DATA__

	bool (*is_running)(struct lxc_container *c);
	bool (*freeze)(struct lxc_container *c);
bool (*unfreeze)(struct lxc_container *c);
pid_t (*init_pid)(struct lxc_container *c);
bool (*load_config)(struct lxc_container *c, const char *alt_file);
bool (*start)(struct lxc_container *c, int useinit, char * const argv[]);
	bool (*startl)(struct lxc_container *c, int useinit, ...);
	bool (*stop)(struct lxc_container *c);
bool (*want_daemonize)(struct lxc_container *c, bool state);
	bool (*want_close_all_fds)(struct lxc_container *c, bool state);
	char *(*config_file_name)(struct lxc_container *c);
	bool (*wait)(struct lxc_container *c, const char *state, int timeout);
	bool (*set_config_item)(struct lxc_container *c, const char *key, const char *value);
	bool (*destroy)(struct lxc_container *c);
	bool (*destroy_with_snapshots)(struct lxc_container *c);
	bool (*save_config)(struct lxc_container *c, const char *alt_file);
	bool (*create)(struct lxc_container *c, const char *t, const char *bdevtype,
			struct bdev_specs *specs, int flags, char *const argv[]);

	bool (*createl)(struct lxc_container *c, const char *t, const char *bdevtype,
			struct bdev_specs *specs, int flags, ...);
	bool (*rename)(struct lxc_container *c, const char *newname);
	bool (*reboot)(struct lxc_container *c);
	bool (*shutdown)(struct lxc_container *c, int timeout);
	void (*clear_config)(struct lxc_container *c);
	bool (*clear_config_item)(struct lxc_container *c, const char *key);
	int (*get_config_item)(struct lxc_container *c, const char *key, char *retv, int inlen);
	int (*get_config_item)(struct lxc_container *c, const char *key, char *retv, int inlen);

	char* (*get_running_config_item)(struct lxc_container *c, const char *key);
	int (*get_keys)(struct lxc_container *c, const char *key, char *retv, int inlen);
	char** (*get_interfaces)(struct lxc_container *c);
	char** (*get_ips)(struct lxc_container *c, const char* interface, const char* family, int scope);
	int (*get_cgroup_item)(struct lxc_container *c, const char *subsys, char *retv, int inlen);
	bool (*set_cgroup_item)(struct lxc_container *c, const char *subsys, const char *value);
	const char *(*get_config_path)(struct lxc_container *c);
	bool (*set_config_path)(struct lxc_container *c, const char *path);

	struct lxc_container *(*clone)(struct lxc_container *c, const char *newname,
			const char *lxcpath, int flags, const char *bdevtype,
			const char *bdevdata, uint64_t newsize, char **hookargs);

	int (*console_getfd)(struct lxc_container *c, int *ttynum, int *masterfd);
	int (*console)(struct lxc_container *c, int ttynum,
			int stdinfd, int stdoutfd, int stderrfd, int escape);

	int (*attach)(struct lxc_container *c, lxc_attach_exec_t exec_function,
			void *exec_payload, lxc_attach_options_t *options, pid_t *attached_process);

	int (*attach_run_wait)(struct lxc_container *c, lxc_attach_options_t *options, const char *program, const char * const argv[]);	int (*attach_run_waitl)(struct lxc_container *c, lxc_attach_options_t *options, const char *program, const char *arg, ...);

	int (*snapshot)(struct lxc_container *c, const char *commentfile);
	int (*snapshot_list)(struct lxc_container *c, struct lxc_snapshot **snapshots);

	bool (*snapshot_restore)(struct lxc_container *c, const char *snapname, const char *newname);
	bool (*snapshot_destroy)(struct lxc_container *c, const char *snapname);

	bool (*snapshot_destroy_all)(struct lxc_container *c);
	bool (*may_control)(struct lxc_container *c);

	bool (*add_device_node)(struct lxc_container *c, const char *src_path, const char *dest_path);
	bool (*remove_device_node)(struct lxc_container *c, const char *src_path, const char *dest_path);

	bool (*checkpoint)(struct lxc_container *c, char *directory, bool stop, bool verbose);

	bool (*restore)(struct lxc_container *c, char *directory, bool verbose);
